package com.eli.oneos.db.greendao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.eli.oneos.db.greendao.SSUDPInfo;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table SSUDPINFO.
*/
public class SSUDPInfoDao extends AbstractDao<SSUDPInfo, String> {

    public static final String TABLENAME = "SSUDPINFO";

    /**
     * Properties of entity SSUDPInfo.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Mac = new Property(0, String.class, "mac", true, "MAC");
        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
        public final static Property Cid = new Property(2, String.class, "cid", false, "CID");
        public final static Property Pwd = new Property(3, String.class, "pwd", false, "PWD");
        public final static Property Time = new Property(4, Long.class, "time", false, "TIME");
    };


    public SSUDPInfoDao(DaoConfig config) {
        super(config);
    }
    
    public SSUDPInfoDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'SSUDPINFO' (" + //
                "'MAC' TEXT PRIMARY KEY NOT NULL ," + // 0: mac
                "'NAME' TEXT," + // 1: name
                "'CID' TEXT," + // 2: cid
                "'PWD' TEXT," + // 3: pwd
                "'TIME' INTEGER);"); // 4: time
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'SSUDPINFO'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, SSUDPInfo entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getMac());
 
        String name = entity.getName();
        if (name != null) {
            stmt.bindString(2, name);
        }
 
        String cid = entity.getCid();
        if (cid != null) {
            stmt.bindString(3, cid);
        }
 
        String pwd = entity.getPwd();
        if (pwd != null) {
            stmt.bindString(4, pwd);
        }
 
        Long time = entity.getTime();
        if (time != null) {
            stmt.bindLong(5, time);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public SSUDPInfo readEntity(Cursor cursor, int offset) {
        SSUDPInfo entity = new SSUDPInfo( //
            cursor.getString(offset + 0), // mac
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // cid
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // pwd
            cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4) // time
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, SSUDPInfo entity, int offset) {
        entity.setMac(cursor.getString(offset + 0));
        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setCid(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setPwd(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setTime(cursor.isNull(offset + 4) ? null : cursor.getLong(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(SSUDPInfo entity, long rowId) {
        return entity.getMac();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(SSUDPInfo entity) {
        if(entity != null) {
            return entity.getMac();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
